{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAA;;;;;;;;;;ACAA,wCAAwC;AACxC,yCAAgD;AAChD,mDAA4E;AAC5E,mDAA4E;AAC5E,mDAAmE;AAkB5D,IAAM,SAAS,uBAAf,MAAM,SAAS;CAAG;oBAAZ,SAAS;IAhBrB,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,oCAAgB;YAChB,uBAAa,CAAC,OAAO,CAAC;gBACpB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,CAAC,oCAAgB,EAAE,oCAAgB,CAAC;gBAC9C,WAAW,EAAE,IAAI;gBACjB,OAAO,EAAE,IAAI;aACd,CAAC;SACH;KACF,CAAC;GACW,SAAS,CAAG;;;;;;;ACtBzB;;;;;;ACAA;;;;;;;;;;ACAA,yCAAoD;AACpD,mDAAuD;AAGhD,IAAM,gBAAgB,8BAAtB,MAAM,gBAAgB;CAY5B;AAVC;IADC,oBAAM,EAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;8CACb;AAGb;IADC,oBAAM,EAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;;6CACZ;AAGZ;IADC,oBAAM,EAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;;wDACZ;AAGvB;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,oCAAgB,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC;;qDAC/B;2BAXrB,gBAAgB;IAD5B,oBAAM,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;GAClB,gBAAgB,CAY5B;;;;;;;AChBD;;;;;;;;;;;ACAA,yCAAoD;AACpD,mDAAuD;AAGhD,IAAM,gBAAgB,8BAAtB,MAAM,gBAAgB;CAM5B;AAJC;IADC,oBAAM,EAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;8CACb;AAGb;IADC,uBAAS,EAAC,GAAG,EAAE,CAAC,oCAAgB,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;0DAC9D,oCAAgB,oBAAhB,oCAAgB;oDAAC;2BALlB,gBAAgB;IAD5B,oBAAM,EAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;GAClB,gBAAgB,CAM5B;;;;;;;;;;;ACVD,wCAAwC;AACxC,qDAAyD;AACzD,wDAA+D;AAC/D,yCAAgD;AAChD,mDAAgE;AAChE,mDAAgE;AAOzD,IAAM,gBAAgB,8BAAtB,MAAM,gBAAgB;CAAG;2BAAnB,gBAAgB;IAL5B,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,uBAAa,CAAC,UAAU,CAAC,CAAC,oCAAgB,EAAE,oCAAgB,CAAC,CAAC,CAAC;QACzE,WAAW,EAAE,CAAC,4CAAoB,CAAC;QACnC,SAAS,EAAE,CAAC,sCAAiB,CAAC;KAC/B,CAAC;GACW,gBAAgB,CAAG;;;;;;;;;;;;ACZhC,wCAA4C;AAG5C,yCAAmD;AACnD,yCAAqC;AACrC,mDAAgE;AAChE,mDAAgE;AAIzD,IAAM,iBAAiB,+BAAvB,MAAM,iBAAiB;IAC5B,YAEmB,oBAAkD,EAElD,oBAAkD;QAFlD,yBAAoB,GAApB,oBAAoB,CAA8B;QAElD,yBAAoB,GAApB,oBAAoB,CAA8B;IAClE,CAAC;IAEJ,KAAK,CAAC,MAAM,CAAC,mBAAwC;QACnD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CACvD,mBAAmB,CACpB,CAAC;QACF,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,IAAY;QACxB,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,oBAAoB;aACpD,kBAAkB,CAAC,YAAY,CAAC;aAChC,KAAK,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,CAAC;aAC1C,iBAAiB,CAAC,wBAAwB,EAAE,YAAY,CAAC;aACzD,MAAM,EAAE,CAAC;QAEZ,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,MAAM,CACV,IAAY,EACZ,mBAAwC;QAExC,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QACD,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,IAAY;QACvB,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,eAAe,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE;gBACvD,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;SACJ;QACD,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,aAAa,CACjB,cAAsB,EACtB,UAA+B;QAE/B,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEtD,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QAED,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5E,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEvD,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE9C,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,gBAAgB,CACpB,cAAsB,EACtB,cAAsB;QAEtB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEtD,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QAED,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,MAAM,CACpD,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,KAAK,cAAc,CACnD,CAAC;QAEF,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEjD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,UAAU,EAAE;YACd,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACzD;IACH,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,IAAY;QAC/B,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,oBAAoB;aACpD,kBAAkB,CAAC,YAAY,CAAC;aAChC,KAAK,CAAC,yBAAyB,EAAE,EAAE,IAAI,EAAE,CAAC;aAC1C,MAAM,EAAE,CAAC;QAEZ,OAAO,eAAe,CAAC;IACzB,CAAC;CACF;4BAtGY,iBAAiB;IAD7B,uBAAU,GAAE;IAGR,iDAAgB,EAAC,oCAAgB,CAAC;IAElC,iDAAgB,EAAC,oCAAgB,CAAC;iEADI,oBAAU,oBAAV,oBAAU,oDAEV,oBAAU,oBAAV,oBAAU;GALxC,iBAAiB,CAsG7B;;;;;;;;;;;;AChHD,wCAQwB;AACxB,qDAAyD;AACzD,wDAAkE;AAClE,wDAAkE;AAClE,wDAAkE;AAG3D,IAAM,oBAAoB,kCAA1B,MAAM,oBAAoB;IAC/B,YAA6B,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAG,CAAC;IAGrE,MAAM,CAAS,mBAAwC;QACrD,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;IAC5D,CAAC;IAGD,OAAO;QACL,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;IAC1C,CAAC;IAGD,OAAO,CAAgB,IAAY;QACjC,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAGD,MAAM,CACW,IAAY,EACnB,mBAAwC;QAEhD,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IAClE,CAAC;IAGD,MAAM,CAAgB,IAAY;QAChC,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAGD,yBAAyB,CACR,cAAsB,EAC7B,UAA+B;QAEvC,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;IAC1E,CAAC;IAGD,8BAA8B,CACb,cAAsB,EACZ,cAAsB;QAE/C,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAC5C,cAAc,EACd,cAAc,CACf,CAAC;IACJ,CAAC;CACF;AA7CC;IADC,iBAAI,GAAE;IACC,oCAAI,GAAE;;iEAAsB,2CAAmB,oBAAnB,2CAAmB;;kDAEtD;AAGD;IADC,gBAAG,GAAE;;;;mDAGL;AAGD;IADC,gBAAG,EAAC,OAAO,CAAC;IACJ,qCAAK,EAAC,MAAM,CAAC;;;;mDAErB;AAGD;IADC,gBAAG,EAAC,OAAO,CAAC;IAEV,qCAAK,EAAC,MAAM,CAAC;IACb,oCAAI,GAAE;;yEAAsB,2CAAmB,oBAAnB,2CAAmB;;kDAGjD;AAGD;IADC,mBAAM,EAAC,OAAO,CAAC;IACR,qCAAK,EAAC,MAAM,CAAC;;;;kDAEpB;AAGD;IADC,iBAAI,EAAC,mBAAmB,CAAC;IAEvB,qCAAK,EAAC,MAAM,CAAC;IACb,oCAAI,GAAE;;yEAAa,2CAAmB,oBAAnB,2CAAmB;;qEAGxC;AAGD;IADC,mBAAM,EAAC,mCAAmC,CAAC;IAEzC,qCAAK,EAAC,MAAM,CAAC;IACb,qCAAK,EAAC,gBAAgB,CAAC;;;;0EAMzB;+BAhDU,oBAAoB;IADhC,uBAAU,EAAC,YAAY,CAAC;iEAEyB,sCAAiB,oBAAjB,sCAAiB;GADtD,oBAAoB,CAiDhC;;;;;;;;;;AChED,MAAa,mBAAmB;CAI/B;AAJD,kDAIC;;;;;;;;;;ACJD,+CAAmD;AACnD,wDAA8D;AAE9D,MAAa,mBAAoB,SAAQ,8BAAW,EAAC,2CAAmB,CAAC;CAAG;AAA5E,kDAA4E;;;;;;;ACH5E;;;;;;;;;ACAA,MAAa,mBAAmB;CAE/B;AAFD,kDAEC;;;;;;UCFD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;AAEH,wCAAwC;AACxC,sCAA2C;AAE3C,4CAA6C;AAE7C,KAAK,UAAU,SAAS;IACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;IAChD,MAAM,YAAY,GAAG,KAAK,CAAC;IAC3B,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;IACtC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACvB,eAAM,CAAC,GAAG,CACR,kDAAkD,IAAI,IAAI,YAAY,EAAE,CACzE,CAAC;AACJ,CAAC;AAED,SAAS,EAAE,CAAC","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/typeorm\"","webpack:///./src/computador/entities/computador.entity.ts","webpack:///external commonjs \"typeorm\"","webpack:///./src/computador/entities/periferico.entity.ts","webpack:///./src/computador/computador.module.ts","webpack:///./src/computador/computador.service.ts","webpack:///./src/computador/computador.controller.ts","webpack:///./src/computador/dto/create-computador.dto.ts","webpack:///./src/computador/dto/update-computador.dto.ts","webpack:///external commonjs \"@nestjs/mapped-types\"","webpack:///./src/computador/dto/create-periferico.dto.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ComputadorEntity } from '../computador/entities/computador.entity';\nimport { PerifericoEntity } from '../computador/entities/periferico.entity';\nimport { ComputadorModule } from '../computador/computador.module';\n\n@Module({\n  imports: [\n    ComputadorModule,\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'localhost',\n      port: 5432,\n      username: 'postgres',\n      password: '246810',\n      database: 'postgres',\n      entities: [ComputadorEntity, PerifericoEntity],\n      synchronize: true,\n      logging: true,\n    }),\n  ],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/typeorm\");","import { Column, Entity, OneToMany } from 'typeorm';\nimport { PerifericoEntity } from './periferico.entity';\n\n@Entity({ name: 'computador' })\nexport class ComputadorEntity {\n  @Column({ primary: true })\n  nome: string;\n\n  @Column({ name: 'cor' })\n  cor: string;\n\n  @Column({ name: 'dataFabricacao' })\n  dataFabricacao: number;\n\n  @OneToMany(() => PerifericoEntity, (photo) => photo.computador)\n  perifericos: PerifericoEntity[];\n}\n","module.exports = require(\"typeorm\");","import { Column, Entity, ManyToOne } from 'typeorm';\nimport { ComputadorEntity } from './computador.entity';\n\n@Entity({ name: 'periferico' })\nexport class PerifericoEntity {\n  @Column({ primary: true })\n  nome: string;\n\n  @ManyToOne(() => ComputadorEntity, (computador) => computador.perifericos)\n  computador: ComputadorEntity;\n}\n","import { Module } from '@nestjs/common';\nimport { ComputadorService } from './computador.service';\nimport { ComputadorController } from './computador.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ComputadorEntity } from './entities/computador.entity';\nimport { PerifericoEntity } from './entities/periferico.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ComputadorEntity, PerifericoEntity])],\n  controllers: [ComputadorController],\n  providers: [ComputadorService],\n})\nexport class ComputadorModule {}\n","import { Injectable } from '@nestjs/common';\nimport { CreateComputadorDto } from './dto/create-computador.dto';\nimport { UpdateComputadorDto } from './dto/update-computador.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ComputadorEntity } from './entities/computador.entity';\nimport { PerifericoEntity } from './entities/periferico.entity';\nimport { CreatePerifericoDto } from './dto/create-periferico.dto';\n\n@Injectable()\nexport class ComputadorService {\n  constructor(\n    @InjectRepository(ComputadorEntity)\n    private readonly computadorRepository: Repository<ComputadorEntity>,\n    @InjectRepository(PerifericoEntity)\n    private readonly perifericoRepository: Repository<PerifericoEntity>\n  ) {}\n\n  async create(createComputadorDto: CreateComputadorDto): Promise<void> {\n    const computador = await this.computadorRepository.create(\n      createComputadorDto\n    );\n    await this.computadorRepository.save(computador);\n  }\n\n  async findAll(): Promise<ComputadorEntity[]> {\n    return await this.computadorRepository.find({ relations: ['perifericos'] });\n  }\n\n  async findOne(nome: string): Promise<ComputadorEntity | null> {\n    const foundComputador = await this.computadorRepository\n      .createQueryBuilder('computador')\n      .where('computador.nome = :nome', { nome })\n      .leftJoinAndSelect('computador.perifericos', 'periferico')\n      .getOne();\n\n    return foundComputador;\n  }\n\n  async update(\n    nome: string,\n    updateComputadorDto: UpdateComputadorDto\n  ): Promise<void> {\n    const foundComputador = await this.findOne(nome);\n    if (!foundComputador) {\n      throw new Error('Computador não encontrado');\n    }\n    await this.computadorRepository.update(nome, updateComputadorDto);\n  }\n\n  async remove(nome: string): Promise<void> {\n    const foundComputador = await this.findOne(nome);\n    if (!foundComputador) {\n      throw new Error('Computador não encontrado');\n    }\n    console.log(foundComputador);\n    if (foundComputador.perifericos.length > 0) {\n      foundComputador.perifericos.forEach(async (periferico) => {\n        await this.perifericoRepository.delete(periferico.nome);\n      });\n    }\n    await this.computadorRepository.delete(nome);\n  }\n\n  async addPeriferico(\n    computadorNome: string,\n    periferico: CreatePerifericoDto\n  ): Promise<void> {\n    const computador = await this.findOne(computadorNome);\n\n    if (!computador) {\n      throw new Error('Computador não encontrado');\n    }\n\n    const perifericoEntity = await this.perifericoRepository.create(periferico);\n    await this.perifericoRepository.save(perifericoEntity);\n\n    computador.perifericos.push(perifericoEntity);\n\n    await this.computadorRepository.save(computador);\n  }\n\n  async removePeriferico(\n    computadorNome: string,\n    perifericoNome: string\n  ): Promise<void> {\n    const computador = await this.findOne(computadorNome);\n\n    if (!computador) {\n      throw new Error('Computador não encontrado');\n    }\n\n    computador.perifericos = computador.perifericos.filter(\n      (periferico) => periferico.nome !== perifericoNome\n    );\n\n    await this.computadorRepository.save(computador);\n\n    const periferico = await this.findPeriferico(perifericoNome);\n    if (periferico) {\n      await this.perifericoRepository.delete(periferico.nome);\n    }\n  }\n\n  async findPeriferico(nome: string): Promise<PerifericoEntity | null> {\n    const foundPeriferico = await this.perifericoRepository\n      .createQueryBuilder('periferico')\n      .where('periferico.nome = :nome', { nome })\n      .getOne();\n\n    return foundPeriferico;\n  }\n}\n","import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  Put,\n} from '@nestjs/common';\nimport { ComputadorService } from './computador.service';\nimport { CreateComputadorDto } from './dto/create-computador.dto';\nimport { UpdateComputadorDto } from './dto/update-computador.dto';\nimport { CreatePerifericoDto } from './dto/create-periferico.dto';\n\n@Controller('computador')\nexport class ComputadorController {\n  constructor(private readonly computadorService: ComputadorService) {}\n\n  @Post()\n  create(@Body() createComputadorDto: CreateComputadorDto) {\n    return this.computadorService.create(createComputadorDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.computadorService.findAll();\n  }\n\n  @Get(':nome')\n  findOne(@Param('nome') nome: string) {\n    return this.computadorService.findOne(nome);\n  }\n\n  @Put(':nome')\n  update(\n    @Param('nome') nome: string,\n    @Body() updateComputadorDto: UpdateComputadorDto\n  ) {\n    return this.computadorService.update(nome, updateComputadorDto);\n  }\n\n  @Delete(':nome')\n  remove(@Param('nome') nome: string) {\n    return this.computadorService.remove(nome);\n  }\n\n  @Post(':nome/perifericos')\n  addPerifericoToComputador(\n    @Param('nome') computadorNome: string,\n    @Body() periferico: CreatePerifericoDto\n  ) {\n    return this.computadorService.addPeriferico(computadorNome, periferico);\n  }\n\n  @Delete(':nome/perifericos/:perifericoNome')\n  removePerifericoFromComputador(\n    @Param('nome') computadorNome: string,\n    @Param('perifericoNome') perifericoNome: string\n  ) {\n    return this.computadorService.removePeriferico(\n      computadorNome,\n      perifericoNome\n    );\n  }\n}\n","export class CreateComputadorDto {\n  nome: string;\n  cor: string;\n  dataFabricacao: number;\n}\n","import { PartialType } from '@nestjs/mapped-types';\nimport { CreateComputadorDto } from './create-computador.dto';\n\nexport class UpdateComputadorDto extends PartialType(CreateComputadorDto) {}\n","module.exports = require(\"@nestjs/mapped-types\");","export class CreatePerifericoDto {\n  nome: string;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}